-- Roblox LocalScript

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer

-- Function to teleport to a specific player
local function teleportTo(targetPlayer)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        player.Character:MoveTo(targetPlayer.Character.HumanoidRootPart.Position)
        print("Teleporting to " .. targetPlayer.Name)
    else
        print("Target player is invalid or not found.")
    end
end

-- Function to find the nearest player
local function getNearestPlayer()
    local nearestPlayer = nil
    local shortestDistance = math.huge
    
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - p.Character.HumanoidRootPart.Position).magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                nearestPlayer = p
            end
        end
    end
    
    return nearestPlayer
end

-- Function to find the farthest player
local function getFarthestPlayer()
    local farthestPlayer = nil
    local longestDistance = 0
    
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - p.Character.HumanoidRootPart.Position).magnitude
            if distance > longestDistance then
                longestDistance = distance
                farthestPlayer = p
            end
        end
    end
    
    return farthestPlayer
end

-- Function to reset the player's character
local function resetCharacter()
    if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        humanoid.Health = 0  -- Set health to 0 to effectively reset the character
        print("Character has been reset.")
    else
        print("Humanoid not found in the character.")
    end
end

-- Function to tween to a specific player
local function tweenTo(targetPlayer, speed)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetPosition = targetPlayer.Character.HumanoidRootPart.Position
        local startPosition = player.Character.HumanoidRootPart.Position
        
        local distance = (startPosition - targetPosition).magnitude
        local tweenTime = distance / (speed or 50)  -- Default speed is 50 if not provided
        
        local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
        local tweenGoal = {Position = targetPosition}
        local tween = TweenService:Create(player.Character.HumanoidRootPart, tweenInfo, tweenGoal)
        
        tween:Play()
        print("Tweening to " .. targetPlayer.Name .. " at " .. (speed or 50) .. " studs per second.")
    else
        print("Target player is invalid or not found.")
    end
end

-- Function to handle chat messages
local function onPlayerChatted(message)
    local words = string.split(message, " ")
    
    if words[1] == "teleport" then
        if #words == 1 then
            print("Teleport to nothing")
        elseif #words == 2 then
            if words[2] == "random" then
                local allPlayers = Players:GetPlayers()
                local otherPlayers = {}
                
                for _, p in pairs(allPlayers) do
                    if p ~= player then
                        table.insert(otherPlayers, p)
                    end
                end
                
                if #otherPlayers > 0 then
                    local randomPlayer = otherPlayers[math.random(#otherPlayers)]
                    teleportTo(randomPlayer)
                else
                    print("No other players to teleport to.")
                end
            elseif words[2] == "nearest" then
                local nearestPlayer = getNearestPlayer()
                if nearestPlayer then
                    teleportTo(nearestPlayer)
                else
                    print("No players found.")
                end
            elseif words[2] == "farthest" then
                local farthestPlayer = getFarthestPlayer()
                if farthestPlayer then
                    teleportTo(farthestPlayer)
                else
                    print("No players found.")
                end
            else
                local targetPlayer = Players:FindFirstChild(words[2])
                if targetPlayer then
                    teleportTo(targetPlayer)
                else
                    print("Player with username " .. words[2] .. " not found.")
                end
            end
        end
    elseif words[1] == "reset" then
        resetCharacter()
    elseif words[1] == "tween" then
        local speed = tonumber(words[3]) or 50  -- Default speed is 50 if not specified
        if #words == 2 then
            local targetPlayerName = words[2]
            local targetPlayer = Players:FindFirstChild(targetPlayerName)
            if targetPlayer then
                tweenTo(targetPlayer, speed)
            else
                print("Player with username " .. targetPlayerName .. " not found.")
            end
        elseif #words == 3 then
            if words[2] == "nearest" then
                local nearestPlayer = getNearestPlayer()
                if nearestPlayer then
                    tweenTo(nearestPlayer, speed)
                else
                    print("No players found.")
                end
            elseif words[2] == "farthest" then
                local farthestPlayer = getFarthestPlayer()
                if farthestPlayer then
                    tweenTo(farthestPlayer, speed)
                else
                    print("No players found.")
                end
            elseif words[2] == "random" then
                local allPlayers = Players:GetPlayers()
                local otherPlayers = {}
                
                for _, p in pairs(allPlayers) do
                    if p ~= player then
                        table.insert(otherPlayers, p)
                    end
                end
                
                if #otherPlayers > 0 then
                    local randomPlayer = otherPlayers[math.random(#otherPlayers)]
                    tweenTo(randomPlayer, speed)
                else
                    print("No other players to tween to.")
                end
            end
        else
            print("Invalid tween command.")
        end
    end
end

-- Connect the chat message event to the handler function
player.Chatted:Connect(onPlayerChatted)
