-- Random Message on Chatted --

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = Players.LocalPlayer

if not localPlayer or not localPlayer.Character or not localPlayer.Character:FindFirstChild("HumanoidRootPart") then
    print("LocalPlayer or their HumanoidRootPart is not available.")
    return
end

local function getNearestPlayer()
    local nearestPlayer = nil
    local shortestDistance = math.huge
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (localPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                nearestPlayer = player
            end
        end
    end
    return nearestPlayer
end

local function sendRandomMessagesa()
    local nearestPlayer = getNearestPlayer()
    if not nearestPlayer then
        print("No nearest player found.")
        return
    end

    local msga = {
        "Hello " .. nearestPlayer.Name .. ", I'm is " .. localPlayer.Name .. " !",
        "I'm the Strongest one here, " .. nearestPlayer.Name .. " ARE YOU READY !",
        "Round Started: " .. nearestPlayer.Name .. " Vs " .. localPlayer.Name .. " !",
        "Oh noe, " .. nearestPlayer.Name .. " You're is UnLucky meets me " .. localPlayer.Name .. ".",
        "Try Your Best, " .. nearestPlayer.Name .. " Haha you can't win me " .. localPlayer.Name .. "."
    }

    local randomIndex = math.random(1, #msga)
    local args = {
        [1] = msga[randomIndex],
        [2] = "All"
    }
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
end

sendRandomMessagesa()
