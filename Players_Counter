-- Function to update player count notification

local function updatePlayerCountNotification()
    local playerCount = #game.Players:GetPlayers()
    
    -- Display notification
    local CoreGui = game:GetService("StarterGui")
    CoreGui:SetCore("SendNotification", {
        Title = "I've Counting All Players",
        Text = "Currently Exist In Server's: " .. playerCount "!",
        Duration = 2,
    })
end

-- Connect function to PlayerAdded and PlayerRemoving events
game.Players.PlayerAdded:Connect(updatePlayerCountNotification)
game.Players.PlayerRemoving:Connect(updatePlayerCountNotification)

-- Initial call to set player count notification when the game starts
updatePlayerCountNotification()


wait(2)


-- Function to update the low health player count notification

local function updateLowHealthPlayerCountNotification()
    local lowHealthCount = 0
    
    -- Count players with health less than 100
    for _, player in ipairs(game.Players:GetPlayers()) do
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid and humanoid.Health < 100 then
                lowHealthCount = lowHealthCount + 1
            end
        end
    end
    
    -- Display notification
    local CoreGui = game:GetService("StarterGui")
    CoreGui:SetCore("SendNotification", {
        Title = "Low Health Counter",
        Text = "Current Exist Players Low Health's: " .. lowHealthCount,
        Duration = 2,
    })
end

-- Connect function to PlayerAdded and PlayerRemoving events
game.Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(updateLowHealthPlayerCountNotification)
end)

game.Players.PlayerRemoving:Connect(updateLowHealthPlayerCountNotification)

-- Initial call to set low health player count notification when the game starts
updateLowHealthPlayerCountNotification()
